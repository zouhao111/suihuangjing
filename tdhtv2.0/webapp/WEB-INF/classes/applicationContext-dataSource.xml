<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-lazy-init="true">

	<context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true"/>
	
	<!-- 系统数据源 -->
	<!-- <bean id="ticket_dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${ticket.driverClassName}" />
		<property name="url" value="${ticket.url}" />
		<property name="username" value="${ticket.username}" />
		<property name="password" value="${ticket.password}" />
		运行判断连接超时任务的时间间隔，单位为毫秒，默认为－1，即不执行任务
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
	</bean> -->
	
	<!-- 阿里 druid数据库连接池 -->
	 <bean id="ticket_dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${url}" />  
         <property name="username" value="${username}" />  
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" />  
         <property name="filters" value="${filters}" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>
	
	
	
	<!-- log4jdbc 调试SQL -->
	
	<bean id="jade.dataSource.com.erich.saleticket.dao" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	 <constructor-arg ref="ticket_dataSource" />
	</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="jade.dataSource.com.erich.saleticket.dao" />
	</bean>
	   
    <!-- 定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jade.dataSource.com.erich.saleticket.dao" />
	</bean>
	
	<!-- 将所有具有@Transactional注解的Bean自动配置为声明式事务支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 获取bean工具注入 -->
	<bean id="springContextHolder" class="com.erich.easyframe.common.utils.SpringContextHolder" lazy-init="false"/>

</beans>